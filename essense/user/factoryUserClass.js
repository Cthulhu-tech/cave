import { User } from "./user.js"

export class GetUserClass {
    constructor(typeUser = 'vagabond', nameUser = null) {
        switch (typeUser){
            case 'FIGHTER':
                this.#deleteOldClass()
                return new User()
                .SetName(nameUser || 'fighter')
                .SetHp(4)
                .SetSpeed(4)
                .SetDefence(4)
                .SetEntelligence(4)
                .SetPerception(4)
                .SetEndurance(4)
                .SetCharisma(4)
                .SetAgility(4)
                .SetLuck(4)
                .SetType('fighter')
            case 'TANK':
                this.#deleteOldClass()
                return new User()
                .SetName(nameUser || 'tank')
                .SetHp(5)
                .SetSpeed(3)
                .SetDefence(5)
                .SetEntelligence(3)
                .SetPerception(4)
                .SetEndurance(3)
                .SetCharisma(2)
                .SetAgility(3)
                .SetLuck(3)
                .SetType('tank')
            case 'ROGUE':
                this.#deleteOldClass()
                return new User()
                .SetName(nameUser || 'rogue')
                .SetHp(4)
                .SetSpeed(4)
                .SetDefence(4)
                .SetEntelligence(3)
                .SetPerception(4)
                .SetEndurance(3)
                .SetCharisma(2)
                .SetAgility(2)
                .SetLuck(3)
                .SetType('rogue')
            case 'RANGER':
                this.#deleteOldClass()
                return new User()
                .SetName(nameUser || 'ranger')
                .SetHp(4)
                .SetSpeed(4)
                .SetDefence(4)
                .SetEntelligence(3)
                .SetPerception(4)
                .SetEndurance(3)
                .SetCharisma(2)
                .SetAgility(2)
                .SetLuck(3)
                .SetType('ranger')
            case 'MAGE': 
                return new User()
                .SetName(nameUser || 'mage')
                .SetHp(4)
                .SetSpeed(4)
                .SetDefence(4)
                .SetEntelligence(3)
                .SetPerception(4)
                .SetEndurance(3)
                .SetCharisma(2)
                .SetAgility(2)
                .SetLuck(3)
                .SetType('mage')
            case 'SUMMONER':
                this.#deleteOldClass()
                return new User()
                .SetName(nameUser || 'summoner')
                .SetHp(4)
                .SetSpeed(4)
                .SetDefence(4)
                .SetEntelligence(3)
                .SetPerception(4)
                .SetEndurance(3)
                .SetCharisma(2)
                .SetAgility(2)
                .SetLuck(3)
                .SetType('summoner')
            case 'CLERIC':
                this.#deleteOldClass()
                return new User()
                .SetName(nameUser || 'cleric')
                .SetHp(4)
                .SetSpeed(4)
                .SetDefence(4)
                .SetEntelligence(3)
                .SetPerception(4)
                .SetEndurance(3)
                .SetCharisma(2)
                .SetAgility(2)
                .SetLuck(3)
                .SetType('cleric')
            case 'BARD':
                this.#deleteOldClass()
                return new User()
                .SetName(nameUser || 'bard')
                .SetHp(4)
                .SetSpeed(4)
                .SetDefence(4)
                .SetEntelligence(3)
                .SetPerception(4)
                .SetEndurance(3)
                .SetCharisma(2)
                .SetAgility(2)
                .SetLuck(3)
                .SetType('bard')
            default: return new User().SetName(nameUser || 'user').SetType('vagabond')
        }

    }        
    #deleteOldClass = () => {
        new User().DeleteInstanse()
    }
}