import { User } from "./user.js"

export class GetUserClass {
    constructor(typeUser = 'default', nameUser = 'user') {
        switch (typeUser){
            case 'FIGHTER':
                this.#DeleteOldClass()
                return new User()
                .SetName('fighter')
                .SetHp(4)
                .SetSpeed(4)
                .SetDefence(4)
                .SetEntelligence(4)
                .SetPerception(4)
                .SetEndurance(4)
                .SetCharisma(4)
                .SetAgility(4)
                .SetLuck(4)
            case 'TANK':
                this.#DeleteOldClass()
                return new User()
                .SetName('tank')
                .SetHp(5)
                .SetSpeed(3)
                .SetDefence(5)
                .SetEntelligence(3)
                .SetPerception(4)
                .SetEndurance(3)
                .SetCharisma(2)
                .SetAgility(3)
                .SetLuck(3)
            case 'ROGUE':
                this.#DeleteOldClass()
                return new User()
                .SetName('rogue')
                .SetHp(4)
                .SetSpeed(4)
                .SetDefence(4)
                .SetEntelligence(3)
                .SetPerception(4)
                .SetEndurance(3)
                .SetCharisma(2)
                .SetAgility(2)
                .SetLuck(3)
            case 'RANGER':
                this.#DeleteOldClass()
                return new User()
                .SetName('ranger')
                .SetHp(4)
                .SetSpeed(4)
                .SetDefence(4)
                .SetEntelligence(3)
                .SetPerception(4)
                .SetEndurance(3)
                .SetCharisma(2)
                .SetAgility(2)
                .SetLuck(3)
            case 'MAGE': 
                return new User()
                .SetName('mage')
                .SetHp(4)
                .SetSpeed(4)
                .SetDefence(4)
                .SetEntelligence(3)
                .SetPerception(4)
                .SetEndurance(3)
                .SetCharisma(2)
                .SetAgility(2)
                .SetLuck(3)
            case 'SUMMONER':
                this.#DeleteOldClass()
                return new User()
                .SetName('summoner')
                .SetHp(4)
                .SetSpeed(4)
                .SetDefence(4)
                .SetEntelligence(3)
                .SetPerception(4)
                .SetEndurance(3)
                .SetCharisma(2)
                .SetAgility(2)
                .SetLuck(3)
            case 'CLERIC':
                this.#DeleteOldClass()
                return new User()
                .SetName('cleric')
                .SetHp(4)
                .SetSpeed(4)
                .SetDefence(4)
                .SetEntelligence(3)
                .SetPerception(4)
                .SetEndurance(3)
                .SetCharisma(2)
                .SetAgility(2)
                .SetLuck(3)
            case 'BARD':
                this.#DeleteOldClass()
                return new User()
                .SetName('bard')
                .SetHp(4)
                .SetSpeed(4)
                .SetDefence(4)
                .SetEntelligence(3)
                .SetPerception(4)
                .SetEndurance(3)
                .SetCharisma(2)
                .SetAgility(2)
                .SetLuck(3)
            default: return new User().SetName(nameUser)
        }

    }        
    #DeleteOldClass = () => {
        new User().DeleteInstanse()
    }
}